---
- name: Check if already running
  uri:
    url: https://{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}:{{port_django}}
    method: GET
    validate_certs: no
  register: django_result
  failed_when: false

- name: Wait for database {{db_django_name}} running
  shell: "docker run --rm --link {{db_container_name}} mysql sh -c 'mysql -h {{db_container_name}} -u {{db_user}} -p{{db_password}} -D {{db_django_name}}'"
  register: result
  until: result.rc == 0
  retries: 10
  delay: 3

- name: Run cauldron server
  docker_container:
    name: "{{ django_name }}"
    image: "{{ django_image }}"
    state: started
    restart: "{{ 'yes' if django_result.status != 200 else 'no'}}"
    networks:
      - name: "{{ network_name }}"
    ports:
      - "{{ port_django }}:{{ port_django }}"
    volumes:
      - "{{configuration_dir}}/django/django_settings.py:/code/cauldron/Cauldron2/Cauldron2/settings.py"
      - "{{volume_name}}:/dashboard_logs"
      - "{{configuration_dir}}/django/jwtR256.key:/code/cauldron/Cauldron2/CauldronApp/jwtR256.key"
      - "{{configuration_dir}}/django/nginx_cauldron.conf:/etc/nginx/sites-enabled/nginx_cauldron.conf"
    env:
      CERTBOT_ENABLED: "{{ certbot_enabled }}"
      CERTBOT_DOMAIN: "{{ certbot_domain }}"
      CERTBOT_MAIL: "{{ certbot_mail }}"

