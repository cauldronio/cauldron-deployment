---

- name: Run Kibana
  docker_container:
    name: "{{ kibana_container_name }}"
    image: "{{ kibana_image }}"
    state: started
    networks:
      - name: "{{ network_name }}"
    ports:
      - "{{ kibana_port }}:5601"

    volumes:
      - "{{configuration_dir}}/es/keys/node-1.pem:/usr/share/kibana/config/node-1.pem"
      - "{{configuration_dir}}/es/keys/node-1-key.pem:/usr/share/kibana/config/node-1-key.pem"
      - "{{configuration_dir}}/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml"
      - "{{configuration_dir}}/es/keys/root-ca.pem:/usr/share/kibana/config/root-ca.pem"

#    env:
#      ELASTICSEARCH_URL: https://odfe-node1:9200
#      ELASTICSEARCH_HOSTS: https://odfe-node1:9200
#      SERVER_SSL_ENABLED: "true"
#      SERVER_SSL_KEY: /usr/share/kibana/config/node-1-key.pem
#      SERVER_SSL_CERTIFICATE: /usr/share/kibana/config/node-1.pem


- name: Wait for Kibana Running
  wait_for:
    port: '{{kibana_port}}'
    host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'


- name: Import panels to Kibana
  docker_container:
    name: "{{panels_container}}"
    image: "{{grimoire_image}}"
    cleanup : yes
    detach: no
    restart: yes
    entrypoint: ""
    command: "/panels/import_panels.sh kidash https://admin:{{es_admin_password}}@{{es_container_name}}:{{es_port}} .kibana /panels/"
    volumes:
      - "{{configuration_dir}}/panels:/panels"
    networks:
      - name: "{{ network_name }}"

- name: Create default index
  uri:
    url: "http://{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}:{{kibana_port}}/api/kibana/settings/defaultIndex"
    method: POST
    user: admin
    password: "{{es_admin_password}}"
    force_basic_auth: yes
    body:
      value: "{{ kibana_default_index }}"
    headers:
      kbn-xsrf: "true"
    body_format: json
