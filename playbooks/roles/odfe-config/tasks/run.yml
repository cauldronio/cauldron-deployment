---

- name: "Post configuration: import Kibana objects and Opendistro config (may take some time): {{ODFE_CONFIG_CONTAINER_NAME}}"
  docker_container:
    name: "{{ ODFE_CONFIG_CONTAINER_NAME }}"
    image: "{{ ODFE_CONFIG_IMAGE_NAME }}"
    state: started
    restart: true
    detach: false
    cleanup: yes
    networks:
      - name: "{{ NETWORK_NAME }}"
    volumes:
      - "{{CAULDRON_CONFIG_DIR}}/odfe-config/settings.py:/settings.py"
      - "{{CAULDRON_CONFIG_DIR}}/kibana_objects:/kibana_objects"
  tags: [odfe-config]


- name: "Add Snapshot S3_ACCESS_KEY"
  command: "docker exec -i {{ ELASTIC_CONTAINER_NAME }} /usr/share/elasticsearch/bin/elasticsearch-keystore add -f --stdin s3.client.default.access_key"
  args:
    stdin: "{{ BACKUP_S3_ACCESS_KEY }}"
  when: "S3_BACKUP_ENABLED"
  tags: [odfe-config]

- name: "Add Snapshot S3_SECRET_KEY"
  command: "docker exec -i {{ ELASTIC_CONTAINER_NAME }} /usr/share/elasticsearch/bin/elasticsearch-keystore add -f --stdin s3.client.default.secret_key"
  args:
    stdin: "{{ BACKUP_S3_SECRET_KEY }}"
  when: "S3_BACKUP_ENABLED"
  tags: [odfe-config]

- name: "Reload ElasticSearch settings"
  uri:
    url: "https://localhost:9200/_nodes/reload_secure_settings"
    user: "admin"
    password: "{{ ELASTIC_ADMIN_PASSWORD }}"
    method: POST
    force_basic_auth: yes
    validate_certs: false
  when: "S3_BACKUP_ENABLED"
  tags: [odfe-config]

- name: "Create S3 Snapshot repository"
  uri:
    url: "https://localhost:9200/_snapshot/s3_repository"
    user: "admin"
    password: "{{ ELASTIC_ADMIN_PASSWORD }}"
    method: PUT
    body: '{"type": "s3", "settings": {"bucket": "{{ BACKUP_S3_BUCKET }}", "base_path": "{{ BACKUP_S3_PATH }}/elasticsearch"} }'
    body_format: json
    force_basic_auth: yes
    validate_certs: false
  register: _result1
  when: "S3_BACKUP_ENABLED"
  tags: [odfe-config]
