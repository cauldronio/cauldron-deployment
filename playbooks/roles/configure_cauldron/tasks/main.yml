---
# @meta description: This playbook makes the initial steps in order to deploy Cauldron and its dependencies.

- name: Create a network for cauldron
  import_tasks: create_network.yml

- name: Create a volume for cauldron
  import_tasks: create_volume.yml

- name: Configure nginx
  import_tasks: configure_nginx.yml

- name: Configure django
  import_tasks: configure_django.yml

- name: Configure jwt keys
  import_tasks: configure_jwt_keys.yml

# @action docker_build.yml (Django) # Build the Django Docker image `<django_image>` located at `<django_image_location>`.
# @var django_image_location: https://gitlab.com/cauldron2/deployment.git:cauldron # URL of the Django Docker image.
# @var django_image: cauldron # Name of the Django Docker image.
- name: Build django image
  vars:
    - task_image_location: "{{django_image_location}}"
    - task_image_name: "{{django_image}}"
  import_tasks: docker_build.yml

# @action docker_build.yml (Mordred) # Build the Mordred Docker image `<mordred_image>` located at `<mordred_image_location>`.
# @var mordred_image_location: https://gitlab.com/cauldron2/deployment.git:mordred # URL of the Mordred Docker image.
# @var mordred_image: cauldron # Name of the Mordred Docker image.
- name: Build mordred image
  vars:
    - task_image_location: "{{mordred_image_location}}"
    - task_image_name: "{{mordred_image}}"
  import_tasks: docker_build.yml

# @action docker_build.yml (Database) # Build the Database Docker image `<db_image>` located at `<db_image_location>`.
# @var db_image_location: https://gitlab.com/cauldron2/deployment.git:database # URL of the Database Docker image.
# @var db_image: database_cauldron # Name of the Database Docker image.
- name: Build database image
  vars:
    - task_image_location: "{{db_image_location}}"
    - task_image_name: "{{db_image}}"
  import_tasks: docker_build.yml

# @action docker_build.yml (Panels) # Build the Panels Docker image `<panels_image>` located at `<panels_image_location>`.
# @var panels_image_location: https://gitlab.com/cauldron2/deployment.git:docker-panels # URL of the Panels Docker image.
# @var panels_image: panels_image # Name of the Panels Docker image.
- name: Build panels container
  vars:
    - task_image_location: "{{panels_image_location}}"
    - task_image_name: "{{panels_image}}"
  import_tasks: docker_build.yml

# @action docker_pull.yml (Elasticsearch) # Pull the ES Docker image `<es_image>` from Docker Hub.
# @var es_image: amazon/opendistro-for-elasticsearch:0.9.0 # Name of the ES Docker image.
- name: Pull ES opendistro image
  vars:
    - task_image_name: "{{es_image}}"
  import_tasks: docker_pull.yml

# @action docker_pull.yml (Kibana) # Pull the Kibana Docker image `<kibana_image>` from Docker Hub.
# @var kibana_image: amazon/opendistro-for-elasticsearch-kibana:0.9.0 # Name of the Kibana Docker image.
- name: Pull Kibana opendistro image
  vars:
    - task_image_name: "{{kibana_image}}"
  import_tasks: docker_pull.yml

# @action docker_pull.yml (MySQL) # Pull the MySQL Docker image `mysql` from Docker Hub.
- name: Pull mysql for checks
  vars:
    - task_image_name: "mysql"
  import_tasks: docker_pull.yml

# @action docker_pull.yml (Nginx) # Pull the Nginx Docker image `<nginx_image>` from Docker Hub.
# @var nginx_image: nginx # Name of the Nginx Docker image.
- name: Pull nginx image
  vars:
    - task_image_name: "{{ nginx_image }}"
  import_tasks: docker_pull.yml

- name: Configure workers
  import_tasks: configure_workers.yml

- name: Configure database
  import_tasks: configure_database.yml

- name: Configure Opendistro
  import_tasks: configure_opendistro.yml

- name: Crete the configuration for the panels
  import_tasks: configure_panels.yml
