---

# @action configure_opendistro.yml # Create `<configuration_dir>/es` directory if not exists.
# @var configuration_dir: /tmp # Main configuration directory.
- name: Create {{configuration_dir}}/es dir if not exists
  file: path={{configuration_dir}}/es state=directory

# @action configure_opendistro.yml # Create `<configuration_dir>/kibana` directory if not exists.
# @var configuration_dir: /tmp # Main configuration directory.
- name: Create {{configuration_dir}}/kibana dir if not exists
  file: path={{configuration_dir}}/kibana state=directory

# @action configure_opendistro.yml # Copy the directory `keys` to `<configuration_dir>/es/` and set permissions `0644`.
# @var configuration_dir: /tmp # Main configuration directory.
- name: Copy keys for Elasticseach and kibana
  copy:
    src: "keys"
    dest: "{{ configuration_dir }}/es/"
    mode: 0644

# @action configure_opendistro.yml # Copy the file `elasticsearch-secured.yml.j2` to `<configuration_dir>/es/elasticsearch-secured.yml` and set permissions `0644`.
# @var configuration_dir: /tmp # Main configuration directory.
- name: Create ElasticSearch global configuration
  template:
    src: elasticsearch-secured.yml.j2
    dest: "{{ configuration_dir }}/es/elasticsearch-secured.yml"
    mode: 0644

# @action configure_opendistro.yml # Copy the file `opendistro-config.yml.j2` to `<configuration_dir>/es/opendistro-config.yml` and set permissions `0644`.
# @var configuration_dir: /tmp # Main configuration directory.
- name: Create ElasticSearch security configuration
  template:
    src: opendistro-config.yml.j2
    dest: "{{ configuration_dir }}/es/opendistro-config.yml"
    mode: 0644

# @action configure_opendistro.yml # Copy the file `kibana.yml.j2` to `<configuration_dir>/kibana/kibana.yml` and set permissions `0644`.
# @var configuration_dir: /tmp # Main configuration directory.
- name: Create Kibana configuration
  template:
    src: kibana.yml.j2
    dest: "{{ configuration_dir }}/kibana/kibana.yml"
    mode: 0644

# @action configure_opendistro.yml # Create hashes for Elasticsearch passwords.
# @var es_admin_password: ChangeAdminPassword # Password for the Elasticsearch admin user.
# @var es_logstash_password: logstash # Password for Logstash.
# @var es_kibanaserver_password: kibanaserver # Password for the Kibana server.
# @var es_kibanaro_password: kibanaro # Password for the Kibana root user.
# @var es_readall_password: readall # Password for the Read-all Kibana user.
# @var es_snapshotrestore_password: snapshotrestore # Password for the Kibana Snapshot and Restore.
- name: Create hashes for elasticsearch passwords
  include: hash_password.yml
  with_items:
      - { loop_psw: "{{ es_admin_password }}", loop_output: "hash_es_admin_password" }
      - { loop_psw: "{{ es_logstash_password }}", loop_output: "hash_es_logstash_password" }
      - { loop_psw: "{{ es_kibanaserver_password }}", loop_output: "hash_es_kibanaserver_password" }
      - { loop_psw: "{{ es_kibanaro_password }}", loop_output: "hash_es_kibanaro_password" }
      - { loop_psw: "{{ es_readall_password }}", loop_output: "hash_es_readall_password" }
      - { loop_psw: "{{ es_snapshotrestore_password }}", loop_output: "hash_es_snapshotrestore_password" }

# @action configure_opendistro.yml # Copy the file `internal_users.yml.j2` to `<configuration_dir>/es/internal_users.yml` and set permissions `0644`.
# @var configuration_dir: /tmp # Main configuration directory.
- name: Copy Elasticsearch internal_users.yml configuration
  template:
    src: internal_users.yml.j2
    dest: "{{ configuration_dir }}/es/internal_users.yml"
    mode: 0644
