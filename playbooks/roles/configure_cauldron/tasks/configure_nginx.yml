---

# @action configure_nginx.yml # Create `<configuration_dir>/nginx` directory if not exists.
# @var configuration_dir: /tmp # Main configuration directory.
- name: Create {{configuration_dir}}/nginx dir if not exists
  file: path={{configuration_dir}}/nginx state=directory

# @action configure_nginx.yml # Create `<configuration_dir>/nginx/certificates` directory if not exists.
# @var configuration_dir: /tmp # Main configuration directory.
- name: Create {{configuration_dir}}/nginx/certificates dir if not exists
  file: path={{configuration_dir}}/nginx/certificates state=directory

# @action configure_nginx.yml # Copy the file `nginx_cauldron.conf.j2` to `<configuration_dir>/nginx/nginx_cauldron.conf`
# @var configuration_dir: /tmp # Main configuration directory.
- name: Configure nginx settings
  template:
    src: nginx_cauldron.conf.j2
    dest: "{{ configuration_dir }}/nginx/nginx_cauldron.conf"

# @action configure_nginx.yml # Copy the file `keys/ssl_server.crt` to `<configuration_dir>/nginx/certificates` and set permissions `0644`.
# @var configuration_dir: /tmp # Main configuration directory.
- name: Copy nginx ssl cert
  copy:
    src: "keys/ssl_server.crt"
    dest: "{{ configuration_dir }}/nginx/certificates"
    mode: 0644

# @action configure_nginx.yml # Copy the file `keys/ssl_server.key` to `<configuration_dir>/nginx/certificates` and set permissions `0644`.
# @var configuration_dir: /tmp # Main configuration directory.
- name: Copy nginx ssl key
  copy:
    src: "keys/ssl_server.key"
    dest: "{{ configuration_dir }}/nginx/certificates"
    mode: 0644
