---
## Build Cauldron webserver image
##
## For this playbook to work, ensure docker-py is installed
##
## You can modify the variables in inventories/<name>/group_vars/webserver.yml
##
## You need to define at least:
## - WEB_IMAGE_NAME (name for the image. Default is cauldron2-webserver:test)
## - WEB_IMAGE_BUILD_DIR (It should be an absolute path, default for this playbook is /tmp/webserver-build-context)
## - WEB_IMAGE_LOCAL_CODE (Optional for using your local code)
##


- name: "Ensures {{ WEB_IMAGE_BUILD_DIR }} exists"
  file:
    path: "{{ WEB_IMAGE_BUILD_DIR }}"
    state: directory
  tags: [webserver]

- name: "Copy Docker context to {{ WEB_IMAGE_BUILD_DIR }}"
  synchronize:
    src: "{{ WEB_IMAGE_DOCKERFILE_PATH }}"
    dest: "{{ WEB_IMAGE_BUILD_DIR }}"
    recursive: yes
    delete: yes
  tags: [webserver]

- name: "Ensures {{ WEB_IMAGE_BUILD_DIR }}/src exists"
  file:
    path: "{{ WEB_IMAGE_BUILD_DIR }}/src"
    state: directory
  tags: [webserver]

- name: "Copy source code from {{ WEB_IMAGE_LOCAL_CODE | default('\"undefined\"') }} to {{ WEB_IMAGE_BUILD_DIR }}/src"
  synchronize:
    src: "{{ WEB_IMAGE_LOCAL_CODE }}/"
    dest: "{{ WEB_IMAGE_BUILD_DIR }}/src"
    recursive: yes
    delete: yes
  when: 'WEB_IMAGE_LOCAL_CODE is defined'
  tags: [webserver]

- name: "Clone source code from {{ WEB_IMAGE_GIT_CODE  | default('\"undefined\"') }} to {{ WEB_IMAGE_BUILD_DIR }}/src"
  git:
    repo: "{{ WEB_IMAGE_GIT_CODE }}"
    dest: "{{ WEB_IMAGE_BUILD_DIR }}/src"
    version: "{{ WEB_IMAGE_GIT_VERSION }}"
  when: 'WEB_IMAGE_LOCAL_CODE is not defined'
  tags: [webserver]

- name: "Build the image for Cauldron webserver"
  docker_image:
    name: "{{ WEB_IMAGE_NAME }}"
    build:
      path: "{{ WEB_IMAGE_BUILD_DIR }}/"
      pull: "no"
    source: build
    state: present
  tags: [webserver]
